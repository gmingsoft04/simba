<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.ism.template</groupId>
	<artifactId>webapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<!-- spring boot start class -->
		<!-- <start-class></start-class> -->
	</properties>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
		<!-- spring-boot-starter-undertow -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<!-- <exclusion> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-logging</artifactId> 
					</exclusion> -->
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jta-atomikos</artifactId>
		</dependency> -->
		<!-- 
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency> -->

		<!-- https://mvnrepository.com/artifact/javax.inject/javax.inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>


		<!-- spring ehcaches -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>


		<!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>




		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-logging -->
		<!-- spring-boot-starter-log4j2 -->
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-log4j2</artifactId> 
			</dependency> -->


		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf -->
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-thymeleaf</artifactId> 
			</dependency> -->

		<!-- https://mvnrepository.com/artifact/org.webjars/webjars-locator -->
		<!-- <dependency> <groupId>org.webjars</groupId> <artifactId>webjars-locator</artifactId> 
			</dependency> -->

		<!-- https://mvnrepository.com/artifact/org.webjars/bootstrap -->
		<!-- <dependency> <groupId>org.webjars</groupId> <artifactId>bootstrap</artifactId> 
			<version>4.0.0-alpha.6-1</version> </dependency> -->


		<dependency>
			<groupId>cn.ism.fw</groupId>
			<artifactId>simba-common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>cn.ism.fw</groupId>
			<artifactId>simba-security</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		<dependency>
			<groupId>cn.ism.fw</groupId>
			<artifactId>simba-web-support</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>  
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- 在default生命周期的 validate阶段就执行resources插件的copy-resources目标 -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<useDefaultDelimiters>false</useDefaultDelimiters>
							<includeEmptyDirs>true</includeEmptyDirs>
							<delimiters>
								<delimiter>${*}</delimiter>
							</delimiters>
							<!-- 指定resources插件处理资源文件到哪个目录下 -->
							<outputDirectory>${project.build.outputDirectory}/config</outputDirectory>
							<!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） <outputDirectory>target/classes</outputDirectory> -->
							<!-- 待处理的资源定义 -->
							<resources>
								<!--配置文件路径 -->
								<resource>
									<directory>src/main/resources/config</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>application.properties</exclude>
										<exclude>application-dev.properties</exclude>
										<exclude>application-test.properties</exclude>
										<exclude>application-prod.properties</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>src/main/resources/config</directory>
									<filtering>true</filtering>
									<includes>
										<include>application.properties</include>
										<include>application-${spring.profiles.active}.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
						<inherited></inherited>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<!-- maven profiles -->
	<!-- mvn clean package -Dmaven.test.skip=true -Pdev -->
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
				<spring.profiles.activeString>spring.profiles.active=dev</spring.profiles.activeString>
			</properties>
			<dependencies>
				<!-- 热部署依赖 -->
				<!-- 热部署可能会导致启动时进入DEBUG（SilentExitException）， 如果进入DEBUG Java -> Debug 
					suspend execution on uncaught exceptions 取消选中 http://stackoverflow.com/questions/32770884/breakpoint-at-throw-new-silentexitexception-in-eclipse-spring-boot -->
				<!-- <dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency> -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-checkstyle-plugin</artifactId>
		                <version>2.17</version>
		                <configuration>
		                    <configLocation>class.xml</configLocation>
		                    <failsOnError>false</failsOnError>
		                    <linkXRef>false</linkXRef>
		                </configuration>
		            </plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<spring.profiles.activeString>spring.profiles.active=prod</spring.profiles.activeString>
			</properties>
			<build>
				<plugins>
					<!-- 用于将应用打成可直接运行的jar（该jar就是用于生产环境中的jar） 值得注意的是，如果没有引用spring-boot-starter-parent做parent， 
						且采用了上述的第二种方式，这里也要做出相应的改动 -->
					<!-- 如果没有configuration.fork=true该项配置，肯呢个devtools不会起作用，即应用不会restart -->
					<!-- <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> 
						<configuration> <mainClass>${start-class}</mainClass> <fork>true</fork> </configuration> 
						</plugin> -->
				</plugins>
			</build>
		</profile>
	</profiles>
</project>